<?xml version="1.0" encoding="Windows-1252"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:tocPath="AeroBasic Programming|Example Programs|Advanced Motion Programming" MadCap:InPreviewMode="false" MadCap:PreloadImages="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="HtmlHelp" MadCap:conditions="" MadCap:PathToHelpSystem="../" MadCap:HelpSystemFileName="A3200.xml" MadCap:SearchType="Stem">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=Windows-1252" /><title>Transformed Motion Example</title>
        <link href="../SkinSupport/Slideshow.css" rel="stylesheet" />
        <link href="../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../Resources/TableStyles/Header.css" rel="stylesheet" />
        <link href="../Resources/TableStyles/MasterPage_Footer.css" rel="stylesheet" />
        <link href="../Resources/Stylesheets/AerotechHelpStyles.css" rel="stylesheet" />
        <link href="../Resources/TableStyles/Header.css" rel="stylesheet" />
        <link href="../Resources/TableStyles/CodeEx.css" rel="stylesheet" />
        <link href="../Resources/TableStyles/Note.css" rel="stylesheet" />
        <script src="../SkinSupport/jquery.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapGlobal.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapSlideshow.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapMerging.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapAliasFile.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapUtilities.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapBody.js" type="text/javascript">
        </script>
        <script src="../SkinSupport/MadCapHighlighter.js" type="text/javascript">
        </script>
    </head>
    <body>
        <script type="text/javascript">
            <!--
			window.onbeforeprint = function(e) {
				var nodes = document.getElementsByTagName("*");
				for (var i = 0; i < nodes.length; i++ ) {			
					if (nodes[i].nodeType == 1)
					{
						var args = nodes[i].attributes;
						for (var j = 0; j < args.length; j++) {
						if ( args[j].name == "MadCap:targetName" )
						{
							nodes[i].setAttribute( "className", "MCTogglerBody" );
						}
						}
					}
				}
			}						
			-->
        </script>
        <table style="width: 100%;margin-left: -7px;margin-right: auto;mc-table-style: url('../Resources/TableStyles/Header.css');" cellspacing="0" MadCap:conditions="AerotechConditions.A3200Only" class="TableStyle-Header">
            <col class="TableStyle-Header-Column-Column1" />
            <tbody>
                <tr class="TableStyle-Header-Body-Body1" style="height: 55px;">
                    <td style="background-repeat: no-repeat;vertical-align: top;background-image: url('../Resources/Images/Header/Header_A3200.png');background-position-y: top;padding-left: 0px;padding-right: 0px;padding-top: 0px;padding-bottom: 0px;border-left-style: none;border-right-style: none;border-top-style: none;border-bottom-style: none;border-bottom-width: 1px;border-bottom-color: #dae3ea;" class="TableStyle-Header-BodyA-Column1-Body1">
                        <div class="MCBreadcrumbsBox_MD_0"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../Programming_Overview.htm">AeroBasic Programming</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="Example_Programs.htm">Example Programs</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="skill__3.html">Advanced Motion Programming</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Transformed Motion</span>
                        </div>
                    </td>
                </tr>
            </tbody>
        </table><a name="kanchor2638"></a>
        <h1 MadCap:autonum=""><span class="autonumber"><span></span></span>Transformed Motion Example</h1>
        <p>Before you run an <span class="AerotechVariablesSimpleName_AeroBasic">AeroBasic</span> example program, copy the example to your User Files directory. Copying the example makes sure that you have access to compile and run the program and prevents changes that you make from being overwritten if you install updated software.</p>
        <p>View the example program in <span class="AerotechVariablesSimpleName_A3200">A3200</span> <span class="AerotechVariablesSimpleName_MotionComposer">Motion Composer</span>. <span class="AerotechVariablesSimpleName_MotionComposer">Motion Composer</span> adds color in the code which makes it easier to read. For best results, do one of the following.</p>
        <ul>
            <li class="BulletLevel1" value="1">Open a new file in <span class="procedureTerm"><span class="AerotechVariablesSimpleName_MotionComposer">Motion Composer</span></span>. Copy and paste the code into the file.</li>
            <li class="noBulletLevel1">OR</li>
            <li class="BulletLevel1" value="2">To examine the source code, open the example program from your User Files directory. You might have to copy the example program from the \<span class="AerotechVariablesSimpleName_A3200">A3200</span>\Samples\<span class="AerotechVariablesSimpleName_AeroBasic">AeroBasic</span> folder first.</li>
        </ul>
        <p>This example is one of many example programs. For a complete list of examples, refer to <a href="Example_Programs.htm">Example Programs</a>.</p>
        <p>
            <MadCap:conditionalText MadCap:conditions="OutputTypeConditions.ScreenOnly">To see a list of available hardware manuals, refer to <a href="../Other_Documentation.htm" MadCap:conditions="AerotechConditions.Option_MainA3200">Other Documentation</a>.</MadCap:conditionalText>
        </p>
        <table style="width: 650px;mc-table-style: url('../Resources/TableStyles/Note.css');margin-left: 0;margin-right: auto;" class="TableStyle_Note" cellspacing="0">
            <tbody>
                <tr>
                    <td class="TableStyle_Note_Body_0_0_RowEnd_ColEnd">
                        <p><span class="note">Note</span>: For this example to run correctly, you must also have the OriginalMotion.pgm file. Get the OriginalMotion.pgm file in the \A3200\Samples\AeroBasic\Transformations folder. Before you continue, read the comments for both TransformedMotion.pgm and OriginalMotion.pgm.</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p>To run this example, you must start TransformedMotion.pgm running in task 4 and start OriginalMotion.pgm running in 
task 1 to start the motion.</p>
        <table class="TableStyle-CodeEx" style="mc-table-style: url('../Resources/TableStyles/CodeEx.css');margin-left: 0;margin-right: auto;caption-side: top;" cellspacing="0">
            <col style="width: 647px;" class="TableStyle-CodeEx-Column-Column1" />
            <tbody>
                <tr class="TableStyle-CodeEx-Body-Body1">
                    <td class="TableStyle-CodeEx-BodyA-Column1-Body1"><pre>'				TransformedMotion.pgm 
'
' This program serves as part of an example on how to use the QCOMMAND CNC command to perform 
' arbitrary coordinate system transformations at the millisecond level.
'  
' In this example the kinematic transformation is of Cartesian coordinates on the X and Y axes into
' polar coordinates that are output to the Z and U axes.  In other words, the user programs his moves 
' in the virtual X, Y axes, (Refer to OriginalMotion.pgm for an example of a user program.) and TransformedMotion.pgm runs continuously, 
' transforming the virtual X Y motion into real motion in the Z, U axes.
'
' To run this example, start TransformedMotion.pgm running in task 4 and start OriginalMotion.pgm running in 
' task 1 to start the motion. Although it is intended for the X and Y axes to be virtual 
' (used for programming only) and the U Z virtual, for the purposes of this example all of them can be virtual.
' NOTE: To run this example program, the GlobalDoubles parameter must be set greater than 8
' NOTE: This example is set up for order of axis X,Y,Z,U. For other orders, you must change the "X_AXIS" 
' etc. #defines below.
'
'       This program can be used as a template to create other kinematic transformations: the code
' indicated by "MANDATORY CODE" below, must be in any kinematic transformation program. The rest of the code
' is particular only to the polar coordinate transform that is used in this example.
'
'
' NOTES SPECIFIC TO THIS EXAMPLE:
'    The U axis must have the CountsPerUnit and SecondaryUnitsScaleFactor parameter set correctly.
'    TransformedMotion.pgm must be executed in Task 4.   
'    The rate at which the queue is monitored is determined by the 
'    MotionUpdateRate Task parameter.  To keep the program running continuously, 
'    the PROGRAM RESTART and WAIT commands are used to direct program flow back to 
'    the top of the program.   
'          The "qcommand read" and "qcommand write" commands return an ID that 
'    identifies a specific entry in the queue.  If this ID is equal to -1, 
'    a valid queue entry is not available.  With valid queue entries, the user
'    can manipulate specific axis position and velocity data.  This example uses
'    the X and Y axis position and velocity data for a polar coordinate
'    transformation.  The result of the transform is output to the Z and U 
'    axes position and velocity data.    
'          If all of the axes included in the "qcommand read" command are not enabled,  
'    the command will return a -1 and the transforms will not be executed. 
'
'       The following global variables are used by OriginalMotion.pgm to tell TransformedMotion.pgm some things about the 
'    polar coordinate transform. They are not needed in the general case, and are particular to this example only.
'          $global[2]  : holds the start position of the R axis (mm/inch) -- (Axis Z)
'          $global[3]  : holds the start position of the Theta axis (degrees) -- (Axis U)
'          $global[4]  : stores sum of Theta position values  (degrees)
'          $global[5]  : stores previous Theta position value (degrees)
'
'       The following variables are assigned to for debug and display purposes only. They are not used in OriginalMotion.pgm.
'          $global[0]  : holds the last ID returned from "qcommand read" 
'          $global[6]  : stores target of current move (X)
'          $global[7]  : stores target of current move (Y)
'
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
      
#define PI 3.14159265

dvar $Temp
dvar $TDelta
dvar $XPosition, $YPosition
dvar $XPositionSquared, $YPositionSquared
dvar $XVelocity, $YVelocity
dvar $RPosition, $RVelocity
dvar $ThetaPosition, $ThetaVelocity
dvar $Time
dvar $Positions[32]
dvar $Velocities[32]
dvar $Targets[32]
dvar $Misc[10]
dvar $ReadID
dvar $WriteID
'
'''''''''''' BEGIN "MANDATORY CODE"  '''''''''''''''''''''''''''''''
'
$Temp=0
'
' Put the task in a critical section to perform operations as quickly as possible
CRITICAL START
'
beginTransform:
'
'  If you do not include the following line, you will not give up time slice and the PC will stop.
DWELL 0.001   
'
'
'  Use the first qcommand read line below if you don't need $Targets or $Misc data.
'  NOTE: All values returned are double precision floating point. Units of $position will be counts. 
'  Units of $Velocities will be counts/msec. Units of time will be milliseconds. 
'  Units of $Targets will be "user units" (Refer to OriginalMotion.pgm)
'
'  $ReadID = QCOMMAND READ 1 X Y $Positions $Velocities $Time   
$ReadID = QCOMMAND READ 1 X Y $Positions $Velocities $Time TARGET $Targets DATA $Misc
'
' Here you can place code you want executed every millisecond, regardless of whether there is motion 
' going on.
'
IF ($ReadID == -1)
	' No queue points available. Do nothing
  	GOTO beginTransform              
ELSE IF $ReadID == $global[0] 
	' This queue entry has already been transformed. Do nothing
  	GOTO beginTransform              
ENDIF
'
' Code from here on will only be executed when there are points in the queue 
' which is when RAPID, LINEAR, CW or CCW move are executing
'
$Temp++
' store this queue entry ID#
$global[0] = $ReadID               
'
'''''''''''' END "MANDATORY CODE"  '''''''''''''''''''''''''''''''

'
' These indices must match the order of axis in your system
'
#define X_AXIS 0
#define Y_AXIS 1
#define Z_AXIS 2
#define U_AXIS 3
'
$global[6] = $Targets[X_AXIS]
$global[7] = $Targets[Y_AXIS]

' Initialize local variables with pos. and vel. values from the queue entry
$XPosition = $Positions[X_AXIS]
$XPositionSquared = $XPosition * $XPosition
$YPosition = $Positions[Y_AXIS]
$YPositionSquared = $YPosition * $YPosition
$XVelocity = $Velocities[X_AXIS]
$YVelocity = $Velocities[Y_AXIS]

' R Position Calculation: R = sqrt((x)**2 + (y)**2))
$RPosition = SQRT($XPositionSquared + $YPositionSquared)
$Positions[Z_AXIS] = $RPosition + ($global[2] * CountsPerUnit.Z)

' R Velocity Calculation: dr/dt = (x(t)*dx/dt + y(t)*dy/dt)/sqrt(x(t)*x(t)+y(t)*y(t))
IF ($RPosition != 0)
 	$Velocities[Z_AXIS] = (($XPosition * $XVelocity) + ($YPosition * $YVelocity)) / $RPosition
END IF

' Theta Position Calculation: THETA = arctan((y)/(x)), converted to degrees 
' Assuming that the U axis is using degrees as units
$ThetaPosition = ATAN2($YPosition, $XPosition) * (180 / PI )
  
' Rollover the Theta value (0 -&gt; 360)
$TDelta = $ThetaPosition - $global[5]
' check for rollover
IF ( $TDelta &lt;= -180.0 )   
 	$TDelta = $TDelta + 360
ELSE IF ( $TDelta &gt;= 180.0 )
	$TDelta = $TDelta - 360
END IF
$global[4] = $global[4] + $TDelta 
$global[5] = $ThetaPosition
$ThetaPosition = $global[4] + $global[3]
  
' Set the U axis position
$Positions[U_AXIS] = $ThetaPosition * ABS(CountsPerUnit.U)
  
' Theta Velocity Calculation 
' dth/dt = (1/(1+x(t)x(t)/(y(t)y(t)))(1/x(t)*dy/dt-y(t)/(x(t)x(t))*dx/dt */
' differentiation of arctan(u) = (du/dt)/(1+u**2)
$ThetaVelocity = (180 / PI )*(1.0/(1.0 + $YPositionSquared / $XPositionSquared) * (($YVelocity / $XPosition) - ($YPosition * $XVelocity / $XPositionSquared)))
    
' Set the U axis velocity
$Velocities[U_AXIS] = $ThetaVelocity * CountsPerUnit.U

'''''''''''' BEGIN "MANDATORY CODE"  '''''''''''''''''''''''''''''''
'
' Now write the U and Z position/velocity commands
'
$WriteID = QCOMMAND WRITE 1 Z U $Positions $Velocities
'
' Some error checking
'
IF ($WriteID == -1)
	'' nothing in queue !!
	'' the entry that we used to get this data for the transform is gone
	'' this should never occur, (if using CRITICAL START and CRITICAL END) and is a fatal error !!
	ABORT X Y U Z    
	END PROGRAM
ENDIF
IF ($WriteID != $ReadID)
	'' read and wrote to 2 different queue entries
	'' the entry that we used to get this data for the transform is gone
	'' this should never occur, (if using CRITICAL START and CRITICAL END) and is a fatal error !!
	ABORT X Y U Z
	END PROGRAM
ENDIF
'
' Return for next point
GOTO beginTransform              
'
'
' End the critical section 
CRITICAL END 
'
'''''''''''' END "MANDATORY CODE"  '''''''''''''''''''''''''''''''

END PROGRAM</pre>
                    </td>
                </tr>
            </tbody>
        </table>
        <MadCap:pageFooter class="OddPage">
            <hr color="#006400" width="100%" size="0" align="center" />
            <table style="width: 100%;border-left-style: none;border-left-width: 1px;border-right-style: none;border-right-width: 1px;border-top-style: none;border-top-width: 1px;border-bottom-style: none;border-bottom-width: 1px;margin-left: 0;margin-right: auto;mc-table-style: url('../Resources/TableStyles/MasterPage_Footer.css');" class="TableStyle-MasterPage_Footer" cellspacing="0">
                <col class="Column-Column1" />
                <col class="Column-Column2" />
                <tbody>
                    <tr class="Body-Body1">
                        <td class="BodyB-Column1-Body1">
                            <p class="feedback">Was this information helpful?</p><a href="http://help.aerotech.com/feedback/?product=A3200&amp;type=help&amp;id=Transformed_Motion.htm&amp;version=6.04.003&amp;helpful=yes" target="_blank"><div class="feedback"><p>Yes</p></div></a><a href="http://help.aerotech.com/feedback/?product=A3200&amp;type=help&amp;id=Transformed_Motion.htm&amp;version=6.04.003&amp;helpful=no" target="_blank"><div class="feedback"><p>No</p></div></a>
                        </td>
                        <td class="BodyA-Column2-Body1" style="text-align: right;">
                            <p class="footer"><span class="AerotechVariablesCompanyName">Aerotech, Inc.</span>
                            </p>
                            <p class="trademarkandCopyright" style="text-align: right;" MadCap:conditions="AerotechConditions.A3200Only,AerotechConditions.A3200Programming,AerotechConditions.Option_LabVIEWA3200">Copyright <img src="../Resources/Images/Header/CopyrightSymbol.png" /> 2001-<span class="AerotechVariablesCurrentYear">2020</span></p>
                            <p class="footer"> All Rights Reserved </p>
                            <p class="footer"><a href="mailto:Support@aerotech.com" target="_blank" title="Support Email Address" alt="Support Email Address">Support@aerotech.com</a>
                            </p>
                            <p class="footer"><a href="http://www.aerotech.com/" target="_blank" title="http://www.aerotech.com" alt="http://www.aerotech.com"><span class="AerotechVariablesWebAddress">www.aerotech.com</span></a>
                            </p>
                        </td>
                    </tr>
                </tbody>
            </table>
        </MadCap:pageFooter>
        <script type="text/javascript" src="../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>